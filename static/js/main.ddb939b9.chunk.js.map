{"version":3,"sources":["components/images/shut_animation.gif","components/MVC/UsefulFunctions/UsefulFunctions.js","components/MVC/Model.js","components/MVC/Algoritm/LocationAlgoritm.js","components/MVC/Controller.js","components/MVC/View.js","components/FildBattlePlayer/FildBattlePlayer.js","components/images/ship.png","components/ShipsPort/ShipsPort.js","components/FildBattleRival/components/RivalCell.js","components/FildBattleRival/FildBattleRival.js","components/GameMenu/components/ButtonComponent.js","components/GameMenu/GameMenu.js","components/Statistic/Statistic.js","App.js","index.js"],"names":["UsefulFunctions","props","self","Str0L","Val","Len","StrVal","toString","length","DT","Year","getFullYear","Month","getMonth","Day","getDate","Hours","getHours","Minutes","getMinutes","getSeconds","FormatDateTime","Date","time","string","body","document","querySelector","lockBody","createElement","messageBox","txt","createTextNode","isNaN","timeMc","id","className","appendChild","setTimeout","removeChild","alert","func","confirmBox","trueButton","falseButton","textMessage","innerHTML","addEventListener","closeButton","arguments","ul_element","i","li_element","min","max","Math","floor","random","val","arr","React","Component","Algoritm","Controller","model","view","uf","$","draggable","containment","revert","cursor","snap","model_context","view_context","general_object_from_state","general_object","droppable","accept","tolerance","over","event","ui","this","filter","addClass","val_of_cell","attr","arr_length","myDisabledCellsArr","j","out","removeClass","drop","num_of_ship","currently_ship","remove","removeAttr","SHIP_LOCATION_ALGORITM","eq","myShipNumbInFild","push","prepend","myShipsLocationArr","my_ship_count","updatePlayButtonStyleAndMode","saveInLocalStorage","e","mode_of_game","mode_of_play","updateStyleOnChangeGameMode","opShipLocation","alertMessage","closeMessage","localStorage","removeItem","window","location","reload","opHitsArr","myHitsArr","currently_cell","target","index","resolt","findValInArr","opShipsLocationArr","context","Number","isInteger","myMissesArr","shotAnimation","answerShot","updateStatisticTable","accurateShot","progressOfGame","updateView","game_room","ships_amount","ships_in_port","player_cells","ship_num","find","opMissesArr","text","updateModeGameStyle","updateMyShipsLocation","updateMyShotStyle","updateOpShotStyle","fadeOut","fadeIn","currently_element","html","ShutAnimation","ShipLocationAlgoritm","Storage","ShipBattleStorageInformation","JSON","parse","opDisabledCellsArr","answerShotArr","count","indexArray","integer","getRandomInt","getOpponentShipPosition","console","log","getIndexForAnswerShot","statisticCallback","index_of_answer_shot","resolt_of_answer_shot","my_cells","pushIndexInAnswerShotArr","gameResolt","object","stringify","FildBattlePlayer","$node","refs","makeDroppable","forMapIndexArray","map","ShipsPort","makeDraggable","num","src","Ship","title","alt","RivalCell","cell_className","cell_val","playerClickHandler","onClick","FildBattleRival","bind","ButtonComponent","button_className","i1_className","i2_className","button_name","ButtonHandler","GameMenu","recordsButtonHandler","rulsButtonHandler","playButtonHandler","finishButtonHandler","Statistic","App","controller","state","getObjectFromLocalStorage","updateGameOnLoad","ReactDOM","render","getElementById"],"mappings":"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AAI,GAAI,GAAI,GAAI,GAAI,IAC7B,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7B,CAAC,GAAI,GAAI,GAAI,GAAI,IACjB,CAAC,GAAI,GAAI,GAAI,GAAI,IACjB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7B,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7B,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7B,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7B,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7B,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7B,CAAC,GAAI,GAAI,GAAI,GAAI,IACjB,CAAC,GAAI,GAAI,GAAI,GAAI,IACjB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7B,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7B,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7B,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7B,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7B,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7B,CAAC,GAAI,GAAI,GAAI,GAAI,IACjB,CAAC,GAAI,GAAI,GAAI,GAAI,IACjB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7B,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7B,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7B,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7B,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7B,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7B,CAAC,GAAI,GAAI,GAAI,GAAI,IACjB,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,GAAI,GAAI,IACjB,CAAC,GAAI,GAAI,GAAI,GAAI,IAC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","file":"static/js/main.ddb939b9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/shut_animation.10a2bb90.gif\";","import React from \"react\";//Подключаем react библиотеку\r\n\r\nclass UsefulFunctions extends React.Component{\r\n\tconstructor(props) {\r\n    super(props);\r\n    this.self = this;\r\n\t}\r\n\r\n\r\n\t//генерирует дату и время при отправке\r\n\tdateOfPublication(){\r\n\t\t// форматирует переданную дату-время в формате дд.мм.гггг чч:мм\r\n\t\tfunction FormatDateTime(DT){\r\n\t\t\tvar Year = DT.getFullYear(),\r\n\t\t\t\tMonth = DT.getMonth()+1,\r\n\t\t\t\tDay = DT.getDate(),\r\n\t\t\t\tHours = DT.getHours(),\r\n\t\t\t\tMinutes = DT.getMinutes(),\r\n\t\t\t\tSeconds = DT.getSeconds();\r\n\t\t\treturn  Str0L(Day,2) + '.' + Str0L(Month,2) + '.' + Year +' '+Str0L(Hours,2) + ':' + Str0L(Minutes,2);\r\n\t\t}\r\n\t\t// дополняет строку Val слева нулями до длины Len\r\n\t\tfunction Str0L(Val,Len)\r\n\t\t{\r\n\t\t\tvar StrVal = Val.toString();\r\n\t\t\twhile ( StrVal.length < Len )\r\n\t\t\t\tStrVal = '0' + StrVal;\r\n\t\t\treturn StrVal;\r\n\t\t}\r\n\t\tvar CurrTime = new Date();\r\n\t\treturn FormatDateTime(CurrTime);\r\n\t}\r\n\r\n\t//выводит информацию на экран, блокирует содержимое страницы; указывается время показа (в милисекундах) и текст сообщения\r\n\talertMessage(time,string){\r\n\t\tvar body = document.querySelector('body'),\r\n\t\t\tlockBody = document.createElement('div'),\r\n\t\t\tmessageBox = document.createElement('p'),\r\n\t\t\ttxt = document.createTextNode(string);\r\n\r\n\t\tif(isNaN(time) === false && time >= 1000 && time <= 10000){var timeMc = time;}\r\n\t\telse{var timeMc = 3000}\r\n\r\n\t\tif(string.length > 0 && string.length < 100){\r\n\t\t\tlockBody.id = 'lockBody';//стили находятся в genereal.css\r\n\t\t\tmessageBox.className = 'messageBox';//стили находятся в genereal.css\r\n\t\t\tmessageBox.appendChild(txt);\r\n\t\t\tlockBody.appendChild(messageBox);\r\n\t\t\tbody.appendChild(lockBody);\r\n\t\t\tsetTimeout(function(){ body.removeChild(lockBody); },timeMc);\r\n\t\t}else{alert('Ошибка длины строки');}\r\n\r\n\t}\r\n\r\n\t//спрашивает информацию о дальнейших действиях, блокирует содержимое страницы;\r\n\tconfirmMessage(string,func){\r\n\t\tvar body = document.querySelector('body'),\r\n\t\t\tlockBody = document.createElement('div'),\r\n\t\t\tconfirmBox = document.createElement('p'),\r\n\t\t\ttrueButton = document.createElement('button'),\r\n\t\t\tfalseButton = document.createElement('button'),\r\n\t\t\ttextMessage  =   document.createTextNode(string);\r\n\t\ttrueButton.innerHTML = 'Да';\r\n\t\tfalseButton.innerHTML = 'Нет';\r\n\r\n\t\tif(string.length > 0 && string.length < 100){\r\n\t\t\tlockBody.id = 'lockBody';//стили находятся в genereal.css\r\n\t\t\tconfirmBox.className = 'confirmBox';//стили находятся в genereal.css\r\n\t\t\ttrueButton.className = 'confirmTrue';\r\n\t\t\tfalseButton.className = 'confirmTrue';\r\n\t\t\tconfirmBox.appendChild(textMessage);\r\n\t\t\tconfirmBox.appendChild(trueButton);\r\n\t\t\tconfirmBox.appendChild(falseButton);\r\n\t\t\tlockBody.appendChild(confirmBox);\r\n\t\t\tbody.appendChild(lockBody);\r\n\t\t\tfalseButton.addEventListener('click',function(){func(false,body,lockBody);},false);\r\n\t\t\ttrueButton.addEventListener('click',function(){func(true,body,lockBody);},false);\r\n\t\t}else{alert('Ошибка');}\r\n\t}\r\n\r\n\t//спрашивает информацию о дальнейших действиях, блокирует содержимое страницы;\r\n\tcloseMessage(string){\r\n\t\tvar body = document.querySelector('body'),\r\n\t\t\tlockBody = document.createElement('div'),\r\n\t\t\tconfirmBox = document.createElement('p'),\r\n\t\t\tcloseButton = document.createElement('button');\r\n\t\tcloseButton.innerHTML = '<i class=\"fa fa-times\" aria-hidden=\"true\"></i>';\r\n\r\n\t\tif(arguments.length > 1){\r\n\t\t\tvar ul_element = document.createElement('ul');\r\n\r\n\t\t\tfor(var i = 0; i < arguments.length; i++){\r\n\t\t\t\tvar li_element = document.createElement('li');\r\n\r\n\t\t\t\tif(typeof arguments[i] === \"string\"){\r\n\t\t\t\t\tvar textMessage = document.createTextNode(arguments[i]);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tvar textMessage = document.createTextNode(\"Вы ввели не строку\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tli_element.appendChild(textMessage);\r\n\t\t\t\tul_element.appendChild(li_element);\r\n\t\t\t}\r\n\r\n\t\t\tlockBody.id = 'lockBody';//стили находятся в genereal.css\r\n\t\t\tconfirmBox.className = 'confirmBox';//стили находятся в genereal.css\r\n\t\t\tconfirmBox.appendChild(ul_element);\r\n\t\t\tconfirmBox.appendChild(closeButton);\r\n\t\t\tlockBody.appendChild(confirmBox);\r\n\t\t\tbody.appendChild(lockBody);\r\n\t\t\tcloseButton.addEventListener('click',function(){body.removeChild(lockBody)});\r\n\r\n\t\t}else if(string.length > 0 && string.length < 300){\r\n\t\t\tvar textMessage = document.createTextNode(string);\r\n\t\t\tlockBody.id = 'lockBody';//стили находятся в genereal.css\r\n\t\t\tconfirmBox.className = 'confirmBox';//стили находятся в genereal.css\r\n\t\t\tcloseButton.className = 'confirmTrue';\r\n\t\t\tconfirmBox.appendChild(textMessage);\r\n\t\t\tconfirmBox.appendChild(closeButton);\r\n\t\t\tlockBody.appendChild(confirmBox);\r\n\t\t\tbody.appendChild(lockBody);\r\n\t\t\tcloseButton.addEventListener('click',function(){body.removeChild(lockBody)});\r\n\t\t}else{alert('Ошибка');}\r\n\r\n\t};\r\n\r\n\t//возвращает случайное число в диапазоне min - max (в нашем случае 0-63)\r\n\tgetRandomInt(min, max){\r\n\t\treturn Math.floor(Math.random() * (max - min + 1)) + min;\r\n\t}\r\n\r\n\t//принимает элемент(в нашем случае число) и массив, если элемент (число) есть в массиве - возвращает false, если нет - true\r\n\tfindValInArr(val,arr){\r\n\t\tif(arr.length > 0){\r\n\t\t\tfor(var i = 0; i < arr.length; i++){\r\n\t\t\t\tif(arr[i] === +val){\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t} else if(i === arr.length-1){\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else { return true; }\r\n\t}\r\n\r\n}\r\n//export default - дает возможность использовать компонент UsefulFunctions в других файлах\r\nexport default UsefulFunctions;\r\n","\r\nimport $ from 'jquery';//Подключаем библиотеку jquery\r\n\r\nimport UsefulFunctions from './UsefulFunctions/UsefulFunctions.js';//Подключаем скрипт с алгоритмом расстановки кораблей\r\n\r\nimport LocationAlgoritm from './Algoritm/LocationAlgoritm.js';//Подключаем скрипт с алгоритмом расстановки кораблей\r\nconst Algoritm  = new LocationAlgoritm();//Cоздаем объект класа, для доступа к алгоритму расстановки кораблей игрока и противника\r\n\r\nclass Model extends UsefulFunctions{\r\n\tconstructor(props) {\r\n\r\n    super(props);\r\n    this.self = this;//Ссылка на контекст собственных методов\r\n\t\tthis.uf = this;//Ссылка на контекст методов из класса UsefulFunctions\r\n    this.SHIP_LOCATION_ALGORITM = Algoritm.ShipLocationAlgoritm();//Ссылка на объект Algoritm класа LocationAlgoritm, для получения алгоритма расстановки кораблей\r\n\r\n\t}\r\n\r\n\t//!Функция возвращает объект из хранилища если он там есть, а при его отсутствии - формирует новый объект\r\n\t//Вызывается в конструкторе компонента App, и формирует объект состояния этого компонента\r\n\tgetObjectFromLocalStorage(){\r\n\r\n\t\tif (typeof(Storage) !== \"undefined\" && localStorage.ShipBattleStorageInformation) {//Проверяет работоспособность хранилища и нужную инфоррмацию в нем\r\n\t\t\t//console.log('Запрос к хранилищу');\r\n\t\t\treturn JSON.parse(localStorage.ShipBattleStorageInformation)//Возвращает массив из хранилища в розкодированом виде\r\n\t\t}\r\n\t\telse {\r\n\t\t\t//console.log('Хранилище localStorage пустое или не работает');\r\n\t\t\treturn {\r\n\t\t\t\tmyDisabledCellsArr : [  [],[],[],[],[],[]  ],//,[],[] - Изначально было 8 кораблей\r\n\t\t\t\topDisabledCellsArr : [],//Массив с индексами ячеек, в которых нельзя оставлять корабль противника\r\n\t\t\t\tmyShipsLocationArr : [],//Массив с индексами ячеек, в которых находятся корабли игрока\r\n\t\t\t\topShipsLocationArr : [],//Массив с индексами ячеек, в которых находятся корабли противника\r\n\t\t\t\tmyMissesArr : [],//Массив с индексами ячеек, в которых игрок промахнулся\r\n\t\t\t\topMissesArr : [],//Массив с индексами ячеек, в которых противник промахнулся\r\n\t\t\t\tmyHitsArr : [],//Массив с индексами ячеек противника, в которые игрок попал\r\n\t\t\t\topHitsArr : [],//Массив с индексами ячеек игрока, в которые противник попал\r\n\t\t\t\tanswerShotArr : [],//Массив с индексами ячеек игрока, в которые противник стрелять не будет\r\n\t\t\t\tmy_ship_count : 0,//Количество кораблей на поле игрока\r\n\t\t\t\tships_amount : 6,//Количество кораблей в порту по умолчанию\r\n\t\t\t\tmode_of_game : false,//Режим игры по умолчанию false\r\n\t\t\t\tmode_of_play : false,//Режим плей по умолчанию\r\n\t\t\t\tmyShipNumbInFild : []//Массив со значениями атрибутов num кораблей, расставленых в поле игрока\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//!Возвращает массив с индексами, для формирования ячеек игрока и противника, а также корабли в порту(for Controller)\r\n\t//!Массив перебирается функцией map() - единствинным цыклом, доступным в жизненном цыкле render() компонента\r\n\tforMapIndexArray(count){//count - количество индексов\r\n\t\t var indexArray = [];//Обявляем массив\r\n\t\t if(count > 7){//Для ячеек игрока и противника\r\n\t\t\t for(var i = 0; i <= count; i++){//Заполняем массив\r\n\t\t\t\t indexArray.push(i)\r\n\t\t\t }\r\n\t\t }else{//Для кораблей\r\n\t\t\t for(var i = 0; i < count; i++){//Заполняем его\r\n\t \t\t\tindexArray.push(i)\r\n\t \t\t }\r\n\t\t }\r\n\t\t return indexArray;//Возвращаем массив с указаным в аргументе количеством индексов\r\n\t}\r\n\r\n\t//!Производит подсчет баллов в конце игры (вызывается в progressOfGame)\r\n\tgameResolt(general_object){\r\n\t\tvar a = general_object.myHitsArr.length * 200,\r\n\t\t\tb = general_object.opHitsArr.length * 50,\r\n\t\t\tc = general_object.myMissesArr.length * 10,\r\n\t\t\tresolt = a - b - c;\r\n\t\treturn resolt;\r\n\t}\r\n\r\n\t//!Возвращает число, которое равно индексу ячейки в которой будет вражеский корабль(учитывает положение остальных кораблей и заблокированных ячеек)\r\n\tgetOpponentShipPosition(general_object){\r\n\r\n\t\tvar integer = this.uf.getRandomInt(0, 63),\r\n\t\t\t\tresolt = this.uf.findValInArr(integer,general_object.opDisabledCellsArr);\r\n\r\n\t\tif(resolt === true){\r\n\t\t\tfor(var i = 0; i < this.self.SHIP_LOCATION_ALGORITM[integer].length; i++){\r\n\r\n\t\t\t\tif(i === 0){\r\n\t\t\t\t\tgeneral_object.opShipsLocationArr.push(integer);\r\n\t\t\t\t\tgeneral_object.opDisabledCellsArr.push(integer);\r\n\t\t\t\t\tgeneral_object.opDisabledCellsArr.push( this.self.SHIP_LOCATION_ALGORITM[integer][i] );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tgeneral_object.opDisabledCellsArr.push( this.self.SHIP_LOCATION_ALGORITM[integer][i] );\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\treturn integer;\r\n\t\t}else if(resolt === false && general_object.opShipsLocationArr.length < general_object.ships_amount){\r\n\t\t\treturn this.self.getOpponentShipPosition(general_object); //Функция повторяется пока не найдено нужное число\r\n\t\t}else {console.log('Ошибка расстановки кораблей');}\r\n\r\n\t}\r\n\r\n\t//!Заталкивает индексы потенциально-заблокированных(те што находятся вокруг корабля) ячеек в массив, во избежании попадения в них компютером\r\n\tpushIndexInAnswerShotArr(index,general_object){\r\n\t\tfor(var i = 0; i < this.self.SHIP_LOCATION_ALGORITM[index].length; i++){\r\n\t\t\tgeneral_object.answerShotArr.push( this.self.SHIP_LOCATION_ALGORITM[index][i]);\r\n\t\t}\r\n\t}\r\n\r\n\t//!Возвращает оригинальный индекс ячейки, который не повторяется в массиве выстрелов противника (вызывается в Model answerShot())\r\n\tgetIndexForAnswerShot(general_object){\r\n\t\tvar integer = this.uf.getRandomInt(0, 63),\r\n\t\t\t\tresolt = this.uf.findValInArr(integer,general_object.answerShotArr);//Ищет совпадения числа в массиве заблокированных ячеек поля игрока\r\n\r\n\t\tif(resolt === true){\r\n\t\t\tgeneral_object.answerShotArr.push(integer);\r\n\t\t\treturn integer;\r\n\t\t}else{\r\n\t\t\treturn this.self.getIndexForAnswerShot(general_object);//Функция повторяется пока не найдено нужное число\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//!Функция расстановки кораблей оппонента (вызывается в Controller playButtonHandler())\r\n\topShipLocation(general_object){\r\n\t\tfor(var i = 0; i < general_object.ships_amount; i++){\r\n\t\t\tthis.self.getOpponentShipPosition(general_object);//Расставляет корабли по одному с учетом правил\r\n\t\t}\r\n\t\tthis.self.saveInLocalStorage(general_object);//Сохраняет расстановку в хранилище\r\n\t\t//console.log('Корабли противника расставлены');\r\n\t}\r\n\r\n\t//!Ответный выстрел противника (вызывается в Controller playerShotHandler())\r\n\tanswerShot(statisticCallback,general_object){\r\n\r\n\t\tvar index_of_answer_shot = this.self.getIndexForAnswerShot(general_object),//Получает индекс потенциального ответного выстрела\r\n\t\t\t\tresolt_of_answer_shot = this.uf.findValInArr(index_of_answer_shot,general_object.myShipsLocationArr),//Проверяет наличие индекса в массиве расстановки кораблей игрока (промах или попадение)\r\n\t\t\t\tmy_cells = $(\"#FildBattlePlayer > div.cell\"),//Коллекция ячеек игрока\r\n\t\t\t\tmodel_context = this.self;\r\n\t\t\t\t//resolt_of_answer_shot === true - промах противника\r\n\t\t\t\t//resolt_of_answer_shot === false - попадание противника\r\n\r\n\t\tif(resolt_of_answer_shot === true){//Промах противника\r\n\r\n\t\t\tgeneral_object.opMissesArr.push(index_of_answer_shot);//Заполняет массив промахов\r\n\t\t\tthis.view.shotAnimation(my_cells.eq(index_of_answer_shot));//Анимация выстрела в ячейке противника\r\n\t\t\tmy_cells.eq(index_of_answer_shot).addClass('mishitShot');//Вешает класс промаха\r\n\r\n\t\t\tif(typeof statisticCallback === 'function'){\r\n\t\t\t\tstatisticCallback(general_object);//Обновляет статистику; statisticCallback - функция обновления статистики которая недоступна MyModel\r\n\t\t\t}\r\n\r\n\t\t} else if(resolt_of_answer_shot === false){//Попадание противника\r\n\r\n\t\t\tthis.self.pushIndexInAnswerShotArr(index_of_answer_shot,general_object);//Заполняет массив потенциально заблокированными индексами ячеек\r\n\t\t\tgeneral_object.opHitsArr.push(index_of_answer_shot);//Заполняет массив попаданий\r\n\t\t\tmy_cells.eq(index_of_answer_shot).addClass('accurateShot');//Вешает класс попаданий\r\n\t\t\tmy_cells.eq(index_of_answer_shot).find(\"img\").addClass('hideElement');//Прячет корабль в ячейке игрока, куда попал противник\r\n\r\n\t\t\tif(typeof statisticCallback === 'function'){\r\n\t\t\t\tstatisticCallback(general_object);//Обновляет статистику; statisticCallback - функция обновления статистики которая недоступна Model\r\n\t\t\t}\r\n\r\n\t\t\tif(general_object.opHitsArr.length < general_object.ships_amount){\r\n\r\n\t\t\t\tthis.uf.alertMessage(2000,\"Вы потеряли корабль!!!\");\r\n\t\t\t\tsetTimeout(function(){ model_context.answerShot(statisticCallback,general_object) },2100);//Повторный выстрел при попадании по кораблю игрока\r\n\t\t\t}else{\r\n\t\t\t\tthis.self.progressOfGame(general_object);//Проверяет прогресс и завершает игру, блокируя ячейки оппонента от кликов функцией callback\r\n\t\t\t}\r\n\r\n\t\t} else {console.log('Ошибка answerShot - Model')}\r\n\r\n\t\tthis.self.saveInLocalStorage(general_object);//Cохраняет информацию в хранилище\r\n\t}\r\n\r\n\t//!Функция реагирует на точный выстрес игрока (вызывается в Controller playerShotHandler)\r\n\taccurateShot(general_object){\r\n\r\n\t\tif(general_object.myHitsArr.length < general_object.ships_amount){\r\n\t\t\tthis.uf.alertMessage(2000,\"Вы подбили корабль противника!!!\");//Выводит сообщение о точном попадании\r\n\t\t}else{\r\n\t\t\tthis.self.progressOfGame(general_object);//Проверяет прогресс и завершает игру, блокируя ячейки оппонента от кликов функцией callback\r\n\t\t}\r\n\t\tthis.self.saveInLocalStorage(general_object);//Сохраняет объект в хранилище (не избыточно)\r\n\r\n\t}\r\n\r\n\t//!Проверяет прогресс игры, выводит сообщение о выиграше или проиграше\r\n\t//!Вызывается в Controller\tupdateGameOnLoad и Model accurateShot\r\n\tprogressOfGame(general_object){\r\n\r\n\t\tif(general_object.myHitsArr.length === general_object.ships_amount){\r\n\r\n\t\t\tvar resolt = this.self.gameResolt(general_object);\r\n\t\t\tthis.uf.alertMessage(5000,\"Поздравляем, Вы ВЫИГРАЛИ!!! Ваши баллы: \" + resolt);\r\n\t\t\t$(\".finish_button\").addClass('activeButton');\r\n\r\n\t\t}else if(\r\n\r\n\t\t\tgeneral_object.opHitsArr.length === general_object.ships_amount){\r\n\t\t\tthis.uf.alertMessage(6000,\"К сожалению, Вы ПРОИГРАЛИ. Нажмите кнопку ФИНИШ\");\r\n\t\t\t$(\".finish_button\").addClass('activeButton');\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//!Сохраняет информацию в локал сторидж (вызывается в Controller)\r\n\tsaveInLocalStorage(object){\r\n\t\tlocalStorage.ShipBattleStorageInformation = JSON.stringify(object);//Переводит массив ShipBattleStorageInformation в формат JSON и сохраняет в localStorage\r\n\t}\r\n\r\n}\r\n//export default - дает возможность использовать компонент Model в других файлах\r\nexport default Model;\r\n","import React from 'react';//Подключаем React библиотеку\r\n\r\nclass LocationAlgoritm extends React.Component{\r\n\t\t\tShipLocationAlgoritm(){\r\n\r\n\t\t\t\tconst location_algoritm = [\r\n\t\t\t\t\t[1, 8, 9],\r\n\t\t\t\t\t[0, 2, 8, 9, 10],\r\n\t\t\t\t\t[1, 3, 9, 10, 11],\r\n\t\t\t\t\t[2, 4, 10, 11, 12],\r\n\t\t\t\t\t[3, 5, 11, 12, 13],\r\n\t\t\t\t\t[4, 6, 12, 13, 14],\r\n\t\t\t\t\t[5, 7, 13, 14, 15],\r\n\t\t\t\t\t[6, 14, 15],\r\n\t\t\t\t\t[0, 1, 9, 16, 17],\r\n\t\t\t\t\t[0, 1, 2, 8, 10, 16, 17, 18],\r\n\t\t\t\t\t[1, 2, 3, 9, 11, 17, 18, 19],\r\n\t\t\t\t\t[2, 3, 4, 10, 12, 18, 19, 20],\r\n\t\t\t\t\t[3, 4, 5, 11, 13, 19, 20, 21],\r\n\t\t\t\t\t[4, 5, 6, 12, 14, 20, 21, 22],\r\n\t\t\t\t\t[5, 6, 7, 13, 15, 21, 22, 23],\r\n\t\t\t\t\t[6, 7, 14, 22, 23],\r\n\t\t\t\t\t[8, 9, 17, 24, 25],\r\n\t\t\t\t\t[8, 9, 10, 16, 18, 24, 25, 26],\r\n\t\t\t\t\t[9, 10, 11, 17, 19, 25, 26, 27],\r\n\t\t\t\t\t[10, 11, 12, 18, 20, 26, 27, 28],\r\n\t\t\t\t\t[11, 12, 13, 19, 21, 27, 28, 29],\r\n\t\t\t\t\t[12, 13, 14, 20, 22, 28, 29, 30],\r\n\t\t\t\t\t[13, 14, 15, 21, 23, 29, 30, 31],\r\n\t\t\t\t\t[14, 15, 22, 30, 31],\r\n\t\t\t\t\t[16, 17, 25, 32, 33],\r\n\t\t\t\t\t[16, 17, 18, 24, 26, 32, 33, 34],\r\n\t\t\t\t\t[17, 18, 19, 25, 27, 33, 34, 35],\r\n\t\t\t\t\t[18, 19, 20, 26, 28, 34, 35, 36],\r\n\t\t\t\t\t[19, 20, 21, 27, 29, 35, 36, 37],\r\n\t\t\t\t\t[20, 21, 22, 28, 30, 36, 37, 38],\r\n\t\t\t\t\t[21, 22, 23, 29, 31, 37, 38, 39],\r\n\t\t\t\t\t[22, 23, 30, 38, 39],\r\n\t\t\t\t\t[24, 25, 33, 40, 41],\r\n\t\t\t\t\t[24, 25, 26, 32, 34, 40, 41, 42],\r\n\t\t\t\t\t[25, 26, 27, 33, 35, 41, 42, 43],\r\n\t\t\t\t\t[26, 27, 28, 34, 36, 42, 43, 44],\r\n\t\t\t\t\t[27, 28, 29, 35, 37, 43, 44, 45],\r\n\t\t\t\t\t[28, 29, 30, 36, 38, 44, 45, 46],\r\n\t\t\t\t\t[29, 30, 31, 37, 39, 45, 46, 47],\r\n\t\t\t\t\t[30, 31, 38, 46, 47],\r\n\t\t\t\t\t[32, 33, 41, 48, 49],\r\n\t\t\t\t\t[32, 33, 34, 40, 42, 48, 49, 50],\r\n\t\t\t\t\t[33, 34, 35, 41, 43, 49, 50, 51],\r\n\t\t\t\t\t[34, 35, 36, 42, 44, 50, 51, 52],\r\n\t\t\t\t\t[35, 36, 37, 43, 45, 51, 52, 53],\r\n\t\t\t\t\t[36, 37, 38, 44, 46, 52, 53, 54],\r\n\t\t\t\t\t[37, 38, 39, 45, 47, 53, 54, 55],\r\n\t\t\t\t\t[38, 39, 46, 54, 55],\r\n\t\t\t\t\t[40, 41, 49, 56, 57],\r\n\t\t\t\t\t[40, 41, 42, 48, 50, 56, 57, 58],\r\n\t\t\t\t\t[41, 42, 43, 49, 51, 57, 58, 59],\r\n\t\t\t\t\t[42, 43, 44, 50, 52, 58, 59, 60],\r\n\t\t\t\t\t[43, 44, 45, 51, 53, 59, 60, 61],\r\n\t\t\t\t\t[44, 45, 46, 52, 54, 60, 61, 62],\r\n\t\t\t\t\t[45, 46, 47, 53, 55, 61, 62, 63],\r\n\t\t\t\t\t[46, 47, 54, 62, 63],\r\n\t\t\t\t\t[48, 49, 57],\r\n\t\t\t\t\t[48, 49, 50, 56, 58],\r\n\t\t\t\t\t[49, 50, 51, 57, 59],\r\n\t\t\t\t\t[50, 51, 52, 58, 60],\r\n\t\t\t\t\t[51, 52, 53, 59, 61],\r\n\t\t\t\t\t[52, 53, 54, 60, 62],\r\n\t\t\t\t\t[53, 54, 55, 61, 63],\r\n\t\t\t\t\t[54, 55, 62]\r\n\t\t\t\t];\r\n\t\treturn location_algoritm; //возврвщает массив из числами, в которые нельзя ставить корабли!!!\r\n\r\n\t};\r\n}\r\n\r\nexport default LocationAlgoritm;\r\n","\r\n\r\nimport $ from 'jquery';//Подключаем библиотеку jquery\r\nimport 'jquery-ui/ui/widgets/draggable.js';//Подключаем виджет jquery-ui\r\n//import 'jquery-ui-touch-punch';//Подключаем событие тач для мобильных устройств\r\n\r\nimport View from './View.js';////Подключаем класс View\r\n\r\nclass Controller extends View{\r\n\r\n\tconstructor(props) {\r\n    super(props);\r\n\r\n    this.self = this;\r\n\t\tthis.model = this;\r\n\t\tthis.view = this;\r\n\t\tthis.uf = this;\r\n\r\n\t}\r\n\r\n\t//!Устанавливает правила для перемещения кораблей\r\n\tmakeDraggable(){\r\n\r\n\t\t\t$('img.ship').draggable({\r\n\t\t\t\t containment : '#GameRoom',//Перемещать можно только в пределах #game_room\r\n\t\t\t\t revert : 'invalid',//Если корабль не попал на свое место, он возвращается обратно\r\n\t\t\t\t cursor : 'move',//Форма курсора\r\n\t\t\t\t snap: '#FildBattlePlayer > div.cell:empty'//Привязка корабля при передвижении к ячейкам поля\r\n\t\t \t})\r\n\r\n\t}\r\n\r\n\t//!Устанавливает правила для розмещения кораблей в результате их перемещения\r\n\tmakeDroppable(model_context,view_context,general_object_from_state) {//Использую model_context и view_context для передачи контекста this\r\n\r\n\t\t\tvar general_object = general_object_from_state;//Ссылка на глобальный объект из состояния\r\n\r\n\t\t $('#FildBattlePlayer > div.cell').droppable({//Указывает куда можна ронять корабли\r\n\t\t\t\t accept:'img.ship',//Указывает какие элементы принимать\r\n\t\t\t\t tolerance: 'intersect',//Указывает условие перетаскивания, intersect - событие срабатывает если корабль на половину в ячейке\r\n\r\n\t\t\t\t //activate: function( event, ui ) {},\r\n\t\t\t\t over: function(event, ui) {//Действия программы, когда корабль над местом потенциального приземления (событие dragover)\r\n\r\n\t\t \t\t\t\t$(this).filter(\":empty\").addClass(\"hoverCell\");//Вешает класс только если ячейка пуста\r\n\r\n\t\t\t \t\t\tvar val_of_cell = +($(this).attr(\"val\")),//Достает атрибут val из ячейки над которой сработало событие drop, и делает из строки число (унарный \"+\")\r\n\t\t\t \t\t\t\t\t//num_of_ship = +(ui.draggable.attr(\"num\")),//Достает атрибут num из корабля над которым сработало событие draggable, и делает из строки число (унарный \"+\")\r\n\t\t\t \t\t\t\t\tarr_length = general_object.myDisabledCellsArr.length;//Длинна массива з индексами заблокированных ячеек игрока\r\n\r\n\t\t\t \t\t\tfor(var i = 0; i < arr_length; i++){//Проверяет какие ячейки можно блокировать, а какие нет и запрещает оставлять корабль в заблокированных ячейках\r\n\t\t\t \t\t\t\tfor(var j = 0; j < general_object.myDisabledCellsArr[i].length; j++){\r\n\t\t\t \t\t\t\t\tif(val_of_cell === general_object.myDisabledCellsArr[i][j]){\r\n\t\t\t \t\t\t\t\t\t$( this ).droppable( \"disable\" );//Запрет ронения в ячейку, если ее индекс находится в model.shipBattleGeneralObj.myDisabledCellsArr\r\n\t\t\t \t\t\t\t\t}\r\n\t\t\t \t\t\t\t}\r\n\t\t\t \t\t\t}\r\n\r\n\t\t \t\t },\r\n\r\n\t\t\t\t out: function(event, ui) {//Действия программы, когда корабль выходит из места потенциального приземления (событие dragout)\r\n\t\t\t\t\t\t\t$(this).removeClass(\"hoverCell\");//$(this) - поточная ячейка\r\n\t\t\t\t },\r\n\r\n\t\t\t\t drop:function(event, ui){//Действия программы, когда корабль приземлился на место (сработало событие drop)\r\n\r\n\t\t\t\t \t\t\tvar val_of_cell = +($(this).attr(\"val\")),//Достает атрибут val из ячейки над которой сработало событие drop, и делает из строки число (унарный \"+\")\r\n\t\t\t\t\t \t\t\t\tnum_of_ship = +(ui.draggable.attr(\"num\")),//Достает атрибут num из корабля над которым сработало событие draggable, и делает из строки число (унарный \"+\")\r\n\t\t\t\t\t \t\t\t\tcurrently_ship = ui.draggable.remove().removeAttr(\"style\"),//ui.draggable - элемент который перетаскивается (сначала вырезается из дома, затем у него удаляется атрибут style)\r\n\t\t\t\t\t \t\t\t\tarr_length = model_context.SHIP_LOCATION_ALGORITM[val_of_cell].length;\r\n\r\n\t\t\t\t \t\t\tfor(var i = 0; i < arr_length; i++ ){\r\n\t\t\t\t\t \t\t\t\tgeneral_object.myDisabledCellsArr[num_of_ship][0] = val_of_cell;//Первый элемент массива - всегда место на котором стоит корабль\r\n\t\t\t\t\t \t\t\t\tgeneral_object.myDisabledCellsArr[num_of_ship][i+1] = model_context.SHIP_LOCATION_ALGORITM[val_of_cell][i];//Индексы заблокированных ячеек прописываются в массиве\r\n\t\t\t\t\t \t\t\t\t$(\"#FildBattlePlayer > div.cell\").eq(model_context.SHIP_LOCATION_ALGORITM[val_of_cell][i]).addClass(\"lockCell\");//Заблокированные ячейки закрашиваются красноватым цветом\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tgeneral_object.myShipNumbInFild.push(num_of_ship);//Формируется массив с индексами (num) кораблей\r\n\t\t\t\t \t\t\t$(this).prepend(currently_ship);//Вставляет draggable-элемент в ячейку над которой сработало событие\r\n\t\t\t\t \t\t\t$(this).removeClass(\"hoverCell\");//Убирает клас временной подсветки\r\n\r\n\t\t \t\t\tgeneral_object.myShipsLocationArr.push(val_of_cell);//Добавляет позицию корабля в массив\r\n\t\t \t\t\tgeneral_object.my_ship_count++;//Щитает корабли, которые были урaнены в поле\r\n\r\n\t\t \t\t\tview_context.updatePlayButtonStyleAndMode(general_object);//Проверяет информацию о игре, и вешает класс активности(зеленая кнопка) при успешной проверке\r\n\t\t \t\t\tmodel_context.saveInLocalStorage(general_object); //Сохраняет глобальный объект с информацией\r\n\r\n\t\t \t\t}\r\n\t\t })\r\n\t}\r\n\r\n\t//!Событие кнопки ИГРАТЬ\r\n\tplayButtonHandler(e,general_object){\r\n\r\n\t\tif(general_object.mode_of_game === true){//Если условие истинно, значит корабли расставлены правильно и можно изменить режим плей и начать игру\r\n\r\n\t\t\tgeneral_object.mode_of_play = true;//Меняем режим плей\r\n\r\n\t\t\tthis.view.updateStyleOnChangeGameMode(general_object);//Меняет стили после нажатия кнопки ИГРАТЬ\r\n\r\n\t\t\tthis.model.opShipLocation(general_object);//Делает расстановку кораблей противника\r\n\r\n\t\t\tthis.model.saveInLocalStorage(general_object);//Сохраняем глобальный объект с информацией в хранилище\r\n\r\n\t\t}else{//Выводит предуприждение, если корабли еще не расставлены\r\n\r\n\t\t\tthis.uf.alertMessage(2000,'Сначала расставьте все корабли на своем поле');\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t//!Событие кнопки ПРАВИЛА\r\n\trulsButtonHandler(e){\r\n\r\n\t\tvar mes_of_ruls1 = \"Расставьте корабли и нажмите кнопку ИГРАТЬ\",\r\n\t\t\t\tmes_of_ruls2 = \"Когда попадете по кораблю противника - стреляйте еще раз, если мимо - стреляет противник\",\r\n\t\t\t\tmes_of_ruls3 = \"Когда соперник подбивает Вас - он стреляет повторно\",\r\n\t\t\t\tmes_of_ruls4 = \"Если Вы побеждаете - на экран выводится сообщение о ваших баллах\",\r\n\t\t\t\tmes_of_ruls5 = \"В любой момент можно закончить игру нажав кнопку ФИНИШ\",\r\n\t\t\t\tmes_of_ruls6 = 'Учитывайте, что корабли противника не могут стоять в соседних ячейках';\r\n\r\n\t\tthis.uf.closeMessage(mes_of_ruls1, mes_of_ruls2, mes_of_ruls6, mes_of_ruls3, mes_of_ruls4, mes_of_ruls5);\r\n\r\n\t}\r\n\r\n\t//Cобытие кнопки РЕКОРДЫ\r\n\trecordsButtonHandler(e){\r\n\t\t\talert('Модуль находится в разработке!!!');\r\n\t}\r\n\r\n\t//!Событие кнопки КОНЕЦ ИГРЫ\r\n\tfinishButtonHandler(e){\r\n\r\n\t\tlocalStorage.removeItem(\"ShipBattleStorageInformation\");//Удаляет информацию из хранилища\r\n\t\twindow.location.reload();//Перезагружает страницу\r\n\r\n\t}\r\n\r\n\t//!Событие клика по ячейке противника (попадание - промах)\r\n\tplayerClickHandler(e,general_object){\r\n\r\n\t\tif(\r\n\t\t\tgeneral_object.mode_of_game === true &&\r\n\t\t\tgeneral_object.mode_of_play === true &&\r\n\t\t\tgeneral_object.opHitsArr.length < 6 &&\r\n\t\t\tgeneral_object.myHitsArr.length < 6\r\n\t\t){\r\n\r\n\t\t\t\tvar currently_cell = $(e.target),//Ячейка на которой сработал клик\r\n\t\t\t\t\t\tindex = +currently_cell.attr('val'),//Вытягивает значение атрибута val и преобразует в число (унарный +)\r\n\t\t\t\t\t\tresolt = this.uf.findValInArr(index,general_object.opShipsLocationArr),\r\n\t\t\t\t\t\tcontext = this.self;\r\n\t\t\t\t\t\t//resolt === true - промах (функция возвращает true если индекс ячейки не совпадает с индексом росстановки кораблей в массиве)\r\n\t\t\t\t\t\t//resolt === false - попадание (функция возвращает false если индекс ячейки совпадает с индексом росстановки кораблей в массиве)\r\n\r\n\t\t\t\tif(resolt === true && Number.isInteger(index) && this.uf.findValInArr(index,general_object.myMissesArr)){//Промах игрока\r\n\r\n\t\t\t\t\t//console.log('Ваш промах');\r\n\t\t\t\t\tgeneral_object.myMissesArr.push(index);//Заполняет массив индексами промахов игрока\r\n\t\t\t\t\tcurrently_cell.addClass('mishitShot');//Вешает клас выстрела мимо на ячейку противника\r\n\t\t\t\t\tthis.view.shotAnimation(currently_cell);//Анимация выстрела в ячейке противника\r\n\r\n\t\t\t\t\tsetTimeout(function(){ context.answerShot(context.updateStatisticTable,general_object);},300);\r\n\t\t\t\t\t//this.model.answerShot(this.view.updateStatisticTable,general_object);//Ответный выстрел противника при промахе игрока  opCellsEventOff - callback + сохраняет инфу в хранилище и обновляет статистику\r\n\r\n\t\t\t\t\tthis.view.updateStatisticTable(general_object);//Обновляет статистику\r\n\r\n\t\t\t\t}else if(resolt === false && Number.isInteger(index) && this.uf.findValInArr(index,general_object.myHitsArr)){//Попадание игрока\r\n\r\n\t\t\t\t\t//console.log('Ваше попадание');\r\n\t\t\t\t\tgeneral_object.myHitsArr.push(index);//Заполняет массив индексами попаданий игрока\r\n\t\t\t\t\tcurrently_cell.addClass('accurateShot');//Вешает клас точного выстрела\r\n\t\t\t\t\tthis.view.shotAnimation(currently_cell);//Анимация выстрела\r\n\r\n\t\t\t\t\tthis.view.updateStatisticTable(general_object);//Обновляет статистику\r\n\t\t\t\t\tthis.model.accurateShot(general_object);//Реагирует на точьный вестрел игрока*/\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.model.saveInLocalStorage(general_object);//Cохраняет информацию в хранилище\r\n\r\n\t\t}else if(\r\n\t\t\tgeneral_object.opHitsArr.length === 6 ||\r\n\t\t\tgeneral_object.myHitsArr.length === 6\r\n\t\t){\r\n\r\n\t\t\tthis.model.progressOfGame(general_object);//Проверяет прогресс игры при условии проиграша или поражения\r\n\r\n\t\t}else {\r\n\r\n\t\t\tthis.uf.alertMessage(2500,\"Расставьте корабли и нажмите кнопку ИГРАТЬ\");\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//!Обновляет  игру при полной загрузке страницы, вызывается в App.js\r\n\tupdateGameOnLoad(general_object_from_state){\r\n\r\n\t\tthis.model.progressOfGame(general_object_from_state);//Проверяет прогресс игры\tпри загрузке\r\n\t\tthis.view.updateView(general_object_from_state);//Обновляет отображение игры\r\n\r\n\t}\r\n\r\n}\r\n//export default - дает возможность использовать компонент Controller в других файлах\r\nexport default Controller;\r\n","\r\nimport ShutAnimation from '../images/shut_animation.gif';//Подключаем картинку анимации выстрела\r\nimport $ from 'jquery';//Подключаем библиотеку jquery\r\n\r\nimport Model from './Model.js';//Подключаем класс Model\r\n\r\nclass View extends Model{\r\n\r\n\tconstructor(props) {\r\n    super(props);\r\n\r\n    this.self = this;\r\n\t\tthis.model = this;\r\n\r\n\t}\r\n\r\n\t//!Устанавливает стили для игры при загрузке страницы (вызывается в View updateView)\r\n\tupdateModeGameStyle(general_object){\r\n\r\n\t\tvar game_room = $('#GameRoom');\r\n\r\n\t\tif(general_object.my_ship_count < general_object.ships_amount){\r\n\r\n\t\t\tgame_room.addClass('style1');//Устанавливаем нужный клас, пока корабли еще не расставлены и игра не начата\r\n\r\n\t\t} else if(general_object.mode_of_game === true && general_object.mode_of_play === false) {\r\n\r\n\t\t\tgame_room.addClass('style1');//Устанавливаем нужный клас, если корабли уже расставлены, но игра не начата\r\n\t\t\tthis.self.updatePlayButtonStyleAndMode(general_object);//Подсвечиваем кнопку ИГРАТЬ зеленым цветом\r\n\r\n\t\t} else{//Все условия соблюдены и игра уже началась\r\n\r\n\t\t\tgame_room.addClass('style2');//Устанавливаем нужный клас после перезагрузки, если игра уже началось\r\n\t\t\t$(\".play_button\").removeClass(\"activeButton\").attr('disabled','disabled');//Блокируем кнопку Играть при перезагрузке, если игра уже началось\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//!Возобновляет расстановку кораблей на поле игрока, при загрузке (вызывается в View updateView)\r\n\tupdateMyShipsLocation(general_object){\r\n\r\n\t\tvar ships_in_port = $(\"#ShipsPort > div > img.ship\");//Массив с кораблями в порту\r\n\t\tvar player_cells = $(\"#FildBattlePlayer > div.cell\");//Массив с ячейками для поля игрока\r\n\r\n\t\tif(general_object.myShipNumbInFild.length > 0){\r\n\r\n\t\t\t\tfor(var i = 0; i < general_object.myShipNumbInFild.length; i++){//Перебирает корабли от 0 до 5 (по атрибутам num)\r\n\r\n\t\t\t\t\tvar ship_num = general_object.myShipNumbInFild[i];//Получаем значение атрибута num корабля по порядку размещения\r\n\r\n\t\t\t\t\tif(general_object.myDisabledCellsArr[ship_num].length > 0){//Если длинна массива с заблокированными ячейками вокруг корабля (i - это num корабля) больше 0 то ...\r\n\r\n\t\t\t\t\t\t\tfor(var j = 0; j < general_object.myDisabledCellsArr[ship_num].length; j++){ //Проходимся цыклом по массиву с заблокированными ячейками вокруг корабля, num которого равен ship_num\r\n\r\n\t\t\t\t\t\t\t\t\tif(j === 0){\r\n\r\n\t\t\t\t\t\t\t\t\t\tvar currently_ship = ships_in_port.eq(ship_num).remove();//Вырезает корабль, индекс в выборке которго совпадает с индексом соответствуещего элемента массива\r\n\t\t\t\t\t\t\t\t\t\tplayer_cells.eq(general_object.myDisabledCellsArr[ship_num][j]).prepend(currently_ship);//ячейка принимает вырезаный корабль\r\n\r\n\t\t\t\t\t\t\t\t} else if (\r\n\r\n\t\t\t\t\t\t\t\t\t\tgeneral_object.mode_of_game === false || general_object.mode_of_play === false){\r\n\t\t\t\t\t\t\t\t\t\tplayer_cells.eq(general_object.myDisabledCellsArr[ship_num][j]).addClass(\"lockCell\");//Закрашевает заблокированные ячейки\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t}\r\n\r\n\t//!Обновляет стили  попаданий и промахов игрока на поле соперника (вызывается в View updateView)\r\n\tupdateMyShotStyle(general_object){\r\n\r\n\t\tif(general_object.myHitsArr.length > 0){\r\n\r\n\t\t\tfor(var i = 0; i < general_object.myHitsArr.length; i++){\r\n\t\t\t\t$(\"#FildBattleRival > div.cell\").eq(general_object.myHitsArr[i]).addClass('accurateShot');//Обновление попаданий игрока (черный цвет ячейки)\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif(general_object.myMissesArr.length > 0){\r\n\r\n\t\t\tfor(var j = 0; j < general_object.myMissesArr.length; j++){\r\n\t\t\t\t$(\"#FildBattleRival > div.cell\").eq(general_object.myMissesArr[j]).addClass('mishitShot');//Обновление промахов игрока (красный цвет ячейки)\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//!Обновляет стили  попаданий и промахов противника на поле игрока (вызывается в View updateView)\r\n\tupdateOpShotStyle(general_object){\r\n\r\n\t\tif(general_object.opHitsArr.length > 0){\r\n\r\n\t\t\tfor(var i = 0; i < general_object.opHitsArr.length; i++){\r\n\t\t\t\t$(\"#FildBattlePlayer > div.cell\").eq(general_object.opHitsArr[i]).addClass('accurateShot');//Обновление попаданий игрока (черный цвет ячейки)\r\n\t\t\t\t$(\"#FildBattlePlayer > div.cell\").eq(general_object.opHitsArr[i]).find('img').addClass('hideElement');\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif(general_object.opMissesArr.length > 0){\r\n\r\n\t\t\tfor(var j = 0; j < general_object.opMissesArr.length; j++){\r\n\t\t\t\t$(\"#FildBattlePlayer > div.cell\").eq(general_object.opMissesArr[j]).addClass('mishitShot');//Обновление промахов игрока (красный цвет ячейки)\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//!Обновляет таблицу статистики игры (вызывается в View updateView и Controller playerShotHandler)\r\n\tupdateStatisticTable(general_object){\r\n\r\n\t\t$(\".my_hits\").text(general_object.myHitsArr.length);//Обновляет количество попаданий игрока\r\n\t\t$(\".op_hits\").text(general_object.opHitsArr.length);//Обновляет количество попаданий противника\r\n\r\n\t\t$(\".my_misses\").text(general_object.myMissesArr.length);//Обновляет количество промахов игрока\r\n\t\t$(\".op_misses\").text(general_object.opMissesArr.length);//Обновляет количество промахов противника\r\n\r\n\t\t$(\".my_losses\").text(general_object.opHitsArr.length);//Обновляет количество потерь игрока, которое равно количеству попаданий противника\r\n\t\t$(\".op_losses\").text(general_object.myHitsArr.length);//Обновляет количество потерь противника, которое равно количеству попаданий игрока\r\n\r\n\t}\r\n\r\n\t//!Обновляет отображение прогреса игры (вызывается в Controller updateGameOnLoad)\r\n\tupdateView(general_object){\r\n\r\n\t\tthis.self.updateModeGameStyle(general_object);//Возобновляет стили для game_room учитывая прогрес игры\r\n\t\tthis.self.updateMyShipsLocation(general_object);//Возобновляет расстановку кораблей на поле игрока\r\n\t\tthis.self.updateMyShotStyle(general_object);//Возобновляет попадания и промахи игрока на поле противника\r\n\t\tthis.self.updateOpShotStyle(general_object);//Возобновляет попадания и промахи противника на поле игрока\r\n\t\t//this.self.updateStatisticTable(general_object);//Возобновляет таблицу статистики - по факту оказалась излишней здесь\r\n\r\n\t}\r\n\r\n\t//!Меняет стили игры  (вызывается в Controller playButtonHandler() при клике на кнопку ИГРАТЬ)\r\n\tupdateStyleOnChangeGameMode(general_object){\r\n\r\n\t\tvar player_cells = $(\"#FildBattlePlayer > div.cell\");//Массив с ячейками для поля игрока\r\n\r\n\t\t//Если игра начата, убираем ненужные классы подсветки поля игрока\r\n\t\tif(general_object.mode_of_game === true && general_object.mode_of_play === true){\r\n\r\n\t\t\tfor(var i = 0; i <= 63; i++){\r\n\t\t\t\tplayer_cells.eq(i).removeClass('lockCell hoverCell');\r\n\t\t\t}\r\n\r\n\t\t\t$('#GameRoom').fadeOut( 500,function(){\r\n\r\n\t\t\t\t$(this).removeClass().addClass('style2').fadeIn( 500 );//Устанавливает нужный класс и делает плавную анимацию между стилями\r\n\t\t\t\t$(\".play_button\").removeClass(\"activeButton\").attr('disabled','disabled');//Блокирует кнопку ИГРАТЬ\r\n\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//!Проверяет состояние игры, а затем активирует кнопку и режим игры\r\n\t//!Вызывается в Controller makeDraggable(), и View updateModeGameStyle() при активации кнопки Играть (подсветка зеленым цветом)\r\n\tupdatePlayButtonStyleAndMode(general_object){\r\n\r\n\t\tif(general_object.my_ship_count === general_object.ships_amount && general_object.mode_of_game === false){\r\n\r\n\t\t\t//Для Controller makeDraggable() когда все корабли расставлены\r\n\t\t\t$(\".play_button\").addClass('activeButton');//Вешает класс активности (зеленая подсветка), когда все корабли уже расставлены\r\n\t\t\tgeneral_object.mode_of_game = true; //Устанавливает режим игры true (при перезагрузке установится стиль style2)\r\n\r\n\t\t}else if(general_object.my_ship_count === general_object.ships_amount && general_object.mode_of_game === true && general_object.mode_of_play === false){\r\n\r\n\t\t\t//для View updateModeGameStyle() при перезагрузке\r\n\t\t\t$(\".play_button\").addClass('activeButton');//Убирает атрибут с кнопки и вешает класс активности (зеленая подсветка)\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//!Воспроизводит анимацию выстрела (вызывается в Controller)\r\n\tshotAnimation(currently_element){\r\n\r\n\t\t\tcurrently_element.html('<img src = '+ ShutAnimation +'>');//Вставляет анимацию выстрела\r\n\t\t\tcurrently_element.find('img').fadeOut(3000,function(){//Скрывает анимацию выстрела\r\n\t\t\t\t$(this).remove();//Вырезает анимацию\r\n\t\t\t})\r\n\t\t\t\r\n\t}\r\n\r\n}\r\n//export default - дает возможность использовать компонент View в других файлах\r\nexport default View;\r\n","import React from 'react';//Подключаем React библиотеку\n\nimport $ from 'jquery';//Подключаем jquery библиотеку\nimport 'jquery-ui/ui/widgets/droppable.js';//Подключаем виджет jquery-ui\n\nimport Controller from '../MVC/Controller.js';//Подключаем Controller\n\n //Создаем компонент FildBattlePlayer который будет отображать поле игрока\n class FildBattlePlayer extends Controller{\n\n   constructor(props) {\n     super(props);\n\n     this.general_object = this.props.general_object;//Объект с игровой информацией, хранящийся в состоянии (state) App компонента\n\n   }\n\n   //Подключает виджет droppable\n   componentDidMount(){\n\n     this.$node = $(this.refs.droppable);\n     this.makeDroppable(this,this,this.general_object);\n\n   }\n\n    //Метод отображения информации\n    render(){\n\n      return(\n          <div id = 'FildBattlePlayer'>\n\n              {//Выводит на экран ячейки для поля игрока\n                this.model.forMapIndexArray(63).map((i) => {return (<div className = 'cell' val = {i} key = {i}></div>)})\n              }\n\n          </div>\n      );\n\n    }\n\n    //Отключает виджет droppable\n    componentWillUnmount(){\n\n        this.$node.droppable('destroy');\n\n    }\n\n}\n\n//export default - дает возможность использовать компонент FildBattlePlayer в других файлах\nexport default FildBattlePlayer;\n","export default __webpack_public_path__ + \"static/media/ship.cdfc5979.png\";","import React from 'react';//Подключаем React библиотеку\n\nimport $ from 'jquery';//Подключаем библиотеку jquery\nimport 'jquery-ui/ui/widgets/draggable.js';//Подключаем виджет jquery-ui\n//import 'jquery-ui-touch-punch';//Подключаем событие тач для мобильных устройств\n\nimport Controller from '../MVC/Controller.js';//Подключаем Controller\n\nimport Ship from '../images/ship.png';//Подключаем изображение корабля\n\n //Создаем компонент ShipsPort который будет отображать корабли\n class ShipsPort extends Controller{\n\n   constructor(props) {\n     super(props);\n\n     this.general_object = this.props.general_object;//Объект с игровой информацией, хранящийся в состоянии (state) App компонента\n\n   }\n\n   //Подключает виджет draggable\n   componentDidMount() {\n\n     this.$node = $(this.refs.draggable);\n     this.makeDraggable(this.$node);\n\n   }\n\n   //Метод отображения информации\n   render(){\n\n      return(\n\n        <div id = 'ShipsPort'>\n\n            {//Выводит на корабли в контейнер порта\n              this.model.forMapIndexArray(this.general_object.ships_amount).map((i) => {return (\n                <div key = {i}>\n\n                  <img  className = 'ship' num = {'' + i} src = {Ship} title = {'ship '+ (i+1)} alt = {'ship ' + (i+1)} />\n\n                </div>\n              )})\n            }\n\n        </div>\n\n      );\n\n    }\n\n   //Отключает виджет draggable\n   componentWillUnmount() {\n\n      this.$node.draggable(\"destroy\");\n\n    }\n\n}\n\n\n\n\n//export default - дает возможность использовать компонент ShipsPort в других файлах\nexport default ShipsPort;\n","\nimport React from 'react';//Подключаем React библиотеку\n\n//Создаем компонент RivalCell который будет отображать ячейки противника\nclass RivalCell extends React.Component{\n\n\t constructor(props) {\n\t\tsuper(props);\n\n    this.cell_className = this.props.cell_className;\n    this.cell_val = this.props.cell_val;\n    this.general_object = this.props.general_object;//Объект с игровой информацией, хранящийся в состоянии (state) App компонента\n\n    this.playerClickHandler = this.props.playerClickHandler;//Обработчик события клика\n\n\t}\n\n   //Метод отображения информации\n   render(){\n\n        return(\n\n            <div\n              className = {this.cell_className}\n              val = {this.cell_val}\n\n              onClick = {(e)=>{\n                this.playerClickHandler(e,this.general_object);\n              }}\n\n            >\n\n            </div>\n\n        );\n\n      }\n}\n\n//export default - дает возможность использовать компонент RivalCell в других файлах\nexport default RivalCell;\n","\nimport React from 'react';//Подключаем React библиотеку\n\nimport Controller from '../MVC/Controller.js';//Подключаем Controller\n\nimport RivalCell from './components/RivalCell.js';//Подключаем RivalCell компонент\n\n//Создаем компонент FildBattleRival который будет отображать поле оппонента\nclass FildBattleRival extends Controller{\n\n\t constructor(props) {\n\t\tsuper(props);\n\n    this.playerClickHandler = this.playerClickHandler.bind(this);//Обработчик события клика по полю соперника\n    this.general_object = this.props.general_object;//Объект с игровой информацией, хранящийся в состоянии (state) App компонента\n\n\t}\n\n   //Метод отображения информации\n   render(){\n\n        return(\n            <div id = 'FildBattleRival'>\n\n                {\n                  //Выводит на экран ячейки для поля игрока\n                  this.model.forMapIndexArray(63).map((i) => {return (\n\n                    <RivalCell\n\n                      cell_className = {'cell'}\n                      cell_val = {i}\n                      key = {i}\n\n                      general_object = {this.general_object}\n                      playerClickHandler = {this.playerClickHandler}\n\n                    />\n\n                  )})\n                }\n\n            </div>\n        );\n\n      }\n}\n\n//export default - дает возможность использовать компонент FildBattleRival в других файлах\nexport default FildBattleRival;\n","\nimport React from 'react';//Подключаем React библиотеку\n\n//Создаем компонент ButtonComponent который будет отображать кнопки в меню\nclass ButtonComponent extends React.Component{\n\n\t constructor(props) {\n\t\tsuper(props);\n\n    this.self = this;\n    this.button_className = this.props.button_className;\n    this.i1_className = this.props.i1_className;\n    this.i2_className = this.props.i2_className;\n    this.button_name = this.props.button_name;\n    //this.disabled = this.props.disabled;disabled = {this.disabled}\n    this.general_object = this.props.general_object;//Объект с игровой информацией, хранящийся в состоянии (state) App компонента\n\n    this.ButtonHandler = this.props.ButtonHandler.bind(this);//Обработчик события клика\n\n\t}\n\n   //Метод отображения информации\n   render(){\n\n      return(\n        <button className = {this.button_className}\n          onClick = {(e)=>{\n            this.ButtonHandler(e,this.general_object);\n          }}\n        >\n  \t\t\t\t<span className = 'fa-stack fa-fw'>\n  \t\t\t\t\t<i className = {this.i1_className}></i>\n  \t\t\t\t\t<i className = {this.i2_className}></i>\n  \t\t\t\t</span>\t{this.button_name}\n\n  \t\t\t</button>\n      );\n\n    }\n}\n\n//export default - дает возможность использовать компонент ButtonComponent в GameMenu\nexport default ButtonComponent;\n","\nimport React from 'react';//Подключаем React библиотеку\n\nimport Controller from '../MVC/Controller.js';//Подключаем Controller\n\nimport ButtonComponent from './components/ButtonComponent.js';//Подключаем ButtonComponent\n\n//Создаем компонент GameMenu который будет отображать Меню\nclass GameMenu extends Controller{\n\n\t constructor(props) {\n\t\tsuper(props);\n\n    this.recordsButtonHandler = this.recordsButtonHandler.bind(this);//Обработчик события клика\n    this.rulsButtonHandler = this.rulsButtonHandler.bind(this);//Обработчик события клика\n    this.playButtonHandler = this.playButtonHandler.bind(this);//Обработчик события клика\n    this.finishButtonHandler = this.finishButtonHandler.bind(this);//Обработчик события клика\n\n    this.general_object = this.props.general_object;//Объект с игровой информацией, хранящийся в состоянии (state) App компонента\n\n\t }\n\n   //Метод отображения информации\n   render(){\n\n      return(\n          <div id = 'GameMenu'>\n\n              <ButtonComponent\n                button_className = {'play_button'}\n                i1_className = {'fa fa-circle fa-stack-2x'}\n                i2_className = {'fa fa-gamepad fa-stack-1x fa-inverse'}\n                button_name = {'ИГРАТЬ'}\n                general_object = {this.props.general_object}\n                //disabled = {'disabled'}\n                ButtonHandler = {this.playButtonHandler}\n              />\n\n              <ButtonComponent\n                button_className = {'ruls_button'}\n                i1_className = {'fa fa-circle fa-stack-2x'}\n                i2_className = {'fa fa-book fa-stack-1x fa-inverse'}\n                button_name = {'ПРАВИЛА'}\n                ButtonHandler = {this.rulsButtonHandler}\n              />\n\n              <ButtonComponent\n                button_className = {'record_button'}\n                i1_className = {'fa fa-circle fa-stack-2x'}\n                i2_className = {'fa fa-trophy fa-stack-1x fa-inverse'}\n                button_name = {'РЕКОРДЫ'}\n                ButtonHandler = {this.recordsButtonHandler}\n\n\n              />\n\n              <ButtonComponent\n                button_className = {'finish_button'}\n                i1_className = {'fa fa-gamepad fa-stack-1x'}\n                i2_className = {'fa fa-ban fa-stack-2x text-danger fa-red-style'}\n                button_name = {'ФИНИШ'}\n                ButtonHandler = {this.finishButtonHandler}\n              />\n\n          </div>\n      );\n\n    }\n\n}\n\n//export default - дает возможность использовать компонент GameMenu в других файлах\nexport default GameMenu;\n","\nimport React from 'react';//Подключаем React библиотеку\n\nimport Controller from '../MVC/Controller.js';//Подключаем Controller\n\n//Создаем компонент Statistic который будет отображать статистику игры\nclass Statistic extends Controller{\n\n   constructor(props) {\n     super(props);\n\n     this.general_object = this.props.general_object;//Объект с игровой информацией, хранящийся в состоянии (state) App компонента\n\n   }\n\n\t //Метод отображения информации\n   render(){\n\n        return(\n            <div className = 'statistic'>\n\n                <p className = \"my_resolt\">\n\n                  <i className = \"fa fa-user fa-lg\" ></i>\n                  <span>Попадания:</span>\t<span className = 'my_hits'>{this.general_object.myHitsArr.length}</span>\n                  <span>Промахи:</span>\t<span className = 'my_misses'>{this.general_object.myMissesArr.length}</span>\n                  <span>Потери:</span>\t<span className = 'my_losses'>{this.general_object.opHitsArr.length}</span>\n\n                </p>\n\n                <p className = \"op_resolt\">\n\n                  <i className = \"fa fa-android fa-lg\" ></i>\n                  <span>Попадания:</span>\t<span className = 'op_hits'>{this.general_object.opHitsArr.length}</span>\n                  <span>Промахи:</span>\t<span className = 'op_misses'>{this.general_object.opMissesArr.length}</span>\n                  <span>Потери:</span>\t<span className = 'op_losses'>{this.general_object.myHitsArr.length}</span>\n\n                </p>\n\n            </div>\n        );\n\n      }\n}\n\n//export default - дает возможность использовать компонент Statistic в других файлах\nexport default Statistic;\n","\nimport React from \"react\";//Подключаем React библиотеку\n\nimport FildBattlePlayer from \"./components/FildBattlePlayer/FildBattlePlayer.js\";//Подключаем компонент FildBattlePlayer\nimport ShipsPort from \"./components/ShipsPort/ShipsPort.js\";//Подключаем компонент ShipsPort\nimport FildBattleRival from \"./components/FildBattleRival/FildBattleRival.js\";//Подключаем компонент FildBattleRival\nimport GameMenu from \"./components/GameMenu/GameMenu.js\";//Подключаем компонент GameMenu\nimport Statistic from \"./components/Statistic/Statistic.js\";//Подключаем компонент Statistic\n\n\nimport 'less';//Подключаем less препроцессор\nimport './less/app.less';//Подключаем стили less\n\nimport './css/removable_classes.css';//Подключаем стили css, так как less выдает ошибку на эти стили font-awesome.css\nimport './css/font-awesome.css';//Подключаем стили (шрифты) для кнопок GameMenu\n\nimport Controller from './components/MVC/Controller.js';//Подключаем Controller\n\nclass App extends Controller{\n  constructor(props) {\n    super(props);\n\n    this.controller = this;\n    this.model = this;\n\n    this.state = {\n      general_object : this.model.getObjectFromLocalStorage()\n    }\n\n  }\n\n  render() {\n\n    return (\n\n      <div id = 'GameRoom'>\n\n        <FildBattlePlayer\n          general_object = {this.state.general_object}\n        />\n        <ShipsPort\n          general_object = {this.state.general_object}\n        />\n        <FildBattleRival\n          general_object = {this.state.general_object}\n        />\n        <GameMenu\n          general_object = {this.state.general_object}\n        />\n        <Statistic\n          general_object = {this.state.general_object}\n        />\n\n      </div>\n\n    );\n  }\n\n  //Запускает скрипты после рендеринга всего приложения\n  componentDidMount() {\n    this.controller.updateGameOnLoad(this.state.general_object);\n  }\n\n}\n\n//export default - дает возможность использовать компонент App в других файлах\nexport default App;\n","import React from 'react';//Подключаем React библиотеку\nimport ReactDOM from 'react-dom';\n\nimport App from './App';//Подключаем компонент App\n\n\nReactDOM.render(\n    <App/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}